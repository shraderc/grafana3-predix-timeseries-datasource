{"version":3,"sources":["../src/datasource.js"],"names":["angular","_","dateMath","kbn","PredixTimeSeriesDatasource","instanceSettings","$q","backendSrv","$timeout","$http","templateSrv","type","url","name","q","http","uaaTokenCache","tsURL","jsonData","predixZoneId","uaacURL","clientData","uaacType","uaacGrantType","uaac_origin","expand","console","log","_this","fetchToken","then","datasourceRequest","data","method","headers","uaacToken","response","mapToTextValue","results","metricName","query","JSON","stringify","result","Object","keys","tags","attributes","attributeName","each","elem","push","mapToTextAndType","map","d","i","text","expandable","options","targets","filter","target","aQuery","deferred","defer","request","fullQuery","tag","tagName","targetAlias","length","a_metric","datapoints","values","timeseries","newseries","instance","resolve","error","promise","Promise","reject","now","Date","checkTime","getTime","uaacTokenType","expiresDTTM","clientID","split","clientSecret","payload","encodeURI","btoa","access_token","token_type","uaacExpires","expires_in","timeObject","aToken","getUAAToken","pendingQueries","predixTSCalls","forEach","SinglePredixTimeSeriesQuery","all","errors","updates","update","queries","when","metric","hide","limit","maxDataPoints","start","range","from","valueOf","end","to","undefined","attribute","value","filters","alias","predixQueries","first","MultiplePredixTimeSeriesQueries","status","message","title"],"mappings":"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","file":"datasource.js","sourcesContent":["import angular from \"angular\";\nimport _ from \"lodash\";\nimport dateMath from \"app/core/utils/datemath\";\nimport kbn from \"app/core/utils/kbn\";\n\nexport class PredixTimeSeriesDatasource {\n\n    constructor(instanceSettings, $q, backendSrv, $timeout, $http, templateSrv) {\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.http = $http;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        // the uaa token is stored here in the model\n        this.uaaTokenCache = [];\n        // these attributes are pulled from the datasource definition ui\n        this.tsURL = instanceSettings.jsonData.tsURL;\n        this.predixZoneId = instanceSettings.jsonData.predixZoneId;\n        this.uaacURL = instanceSettings.jsonData.uaacURL;\n        this.clientData = instanceSettings.jsonData.clientData;\n        this.uaacType = instanceSettings.jsonData.uaacType;\n        this.uaacGrantType = instanceSettings.jsonData.uaacGrantType;\n        this.uaac_origin = instanceSettings.jsonData.uaac_origin;\n        this.expand = true;\n        console.log(\"predix time series datasource constructor finished\");\n    }\n\n    // Required for hints\n    getMetrics() {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/tags',\n                data: '',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(response) {\n                return _this.mapToTextValue(response.data.results);\n            });\n        });\n    }\n\n    getAttributesForMetric(metricName) {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            var query = {\n                \"start\": \"1d-ago\",\n                \"end\": \"1s-ago\",\n                \"tags\": [{\n                    \"name\": [metricName]\n                }]\n            };\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/datapoints',\n                data: JSON.stringify(query),\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(result) {\n                return _this.mapToTextValue(Object.keys(result.data.tags[0].results[0].attributes));\n            });\n        });\n    }\n\n    getAttributeValues(metricName, attributeName) {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            var query = {\n                \"start\": \"1d-ago\",\n                \"end\": \"1s-ago\",\n                \"tags\": [{\n                    \"name\": [metricName]\n                }]\n            };\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/datapoints',\n                data: JSON.stringify(query),\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(result) {\n                return _this.mapToTextValue(result.data.tags[0].results[0].attributes[attributeName]);\n            });\n        });\n    }\n\n    getAggregations() {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/aggregations',\n                data: '',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(response) {\n                var data = [];\n                _.each(response.data.results, function(elem) {\n                    data.push({\n                        name: elem.type,\n                        type: elem.name\n                    });\n                });\n                return _this.mapToTextAndType(data);\n            });\n        });\n    }\n\n    mapToTextValue(results) {\n        return _.map(results, (d, i) => {\n            return {\n                text: d,\n                expandable: true\n            };\n        });\n    }\n\n    mapToTextAndType(result) {\n        return _.map(result, function(d, i) {\n            return {\n                text: d.name,\n                expandable: false,\n                type: d.type\n            };\n        });\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, function(target) {\n            return target.target !== 'select metric';\n        });\n        return options;\n    }\n\n    // Since we are limited on the amount of data that can be returned,\n    // each metric gets its own query for maximum results\n    SinglePredixTimeSeriesQuery(aQuery) {\n        var deferred = this.q.defer();\n        var request = this.backendSrv.datasourceRequest({\n            url: this.tsURL + '/v1/datapoints',\n            data: JSON.stringify(aQuery.fullQuery),\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + this.uaaTokenCache.uaacToken,\n                'Predix-Zone-Id': this.predixZoneId,\n                'Access-Control-Allow-Origin': this.uaac_origin\n            }\n        }).then(function(result) {\n            // we always get one tag back\n            var tag = result.data.tags[0];\n            var tagName = tag.name;\n            if ((typeof aQuery.targetAlias !== 'undefined') && (aQuery.targetAlias.length > 0)) {\n                tagName = aQuery.targetAlias;\n            }\n            // construct the response\n            var a_metric = {\n                target: tagName,\n                datapoints: []\n            };\n            // add in the datapoints, picking the correct fields\n            // predix has a \"quality\" field that is ignored\n            _.each(tag.results[0].values, function(timeseries) {\n                var newseries = [timeseries[1], timeseries[0]];\n\n                // Specific filter for our client - Corey Shrader with Bin Yang's PITC Analytics Team\n                if ((tag.name == \"rttMonLatestHTTPOperRTT\" || tag.name == \"rttMonLatestHTTPOperRTT.detectOutliers\") && tag.results[0].attributes.instance[0] == \"701\") {\n                    //console.log(\"Old: \" + newseries[0]);\n                    if (newseries[0] != 0 && newseries[0] != -1) {\n                        newseries[0] = 80000 / newseries[0];\n                    }\n                    //console.log(\"New: \" + newseries[0]);\n                }\n\n                a_metric.datapoints.push(newseries);\n            });\n            return a_metric;\n        })\n            .then(function(response) {\n                deferred.resolve(response);\n            }, function(error) {\n                console.error(error);\n            });\n        return deferred.promise;\n    }\n\n\n    getUAAToken(_this) {\n        return new Promise(function(resolve, reject) {\n            var now = new Date();\n            var checkTime = new Date(now.getTime() + 1000 * 30);\n            if (typeof _this.uaaTokenCache.uaacTokenType === 'undefined' ||\n                (typeof _this.uaaTokenCache.expiresDTTM !== 'undefined' &&\n                _this.uaaTokenCache.expiresDTTM < checkTime)) {\n                var clientID = _this.clientData.split(\":\")[0];\n                var clientSecret = _this.clientData.split(\":\")[1];\n                var payload = encodeURI(\"client_id=\" + clientID +\n                    \"&client_secret=\" + clientSecret +\n                    \"&response_type=token&grant_type=client_credentials\");\n                _this.backendSrv.datasourceRequest({\n                    method: 'POST',\n                    url: _this.uaacURL,\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'Authorization': 'Basic ' + btoa(_this.clientData),\n                    },\n                    data: payload\n                }).then(\n                    function(response) {\n                        _this.uaaTokenCache = [];\n                        _this.uaaTokenCache.uaacToken = response.data.access_token;\n                        _this.uaaTokenCache.uaacTokenType = response.data.token_type;\n                        _this.uaaTokenCache.uaacExpires = response.data.expires_in;\n                        var timeObject = new Date();\n                        //set the time and date that this token expires\n                        timeObject = new Date(timeObject.getTime() + 1000 * response.data.expires_in);\n                        _this.uaaTokenCache.expiresDTTM = timeObject;\n                        // console.log(\"Got a new token!\");\n                        // console.log($scope.datasource.uaaTokenCache);\n                        resolve(_this.uaaTokenCache);\n                    },\n                    function(error) {\n                        console.log(\"Failed to get a token: \" + error);\n                        resolve(\"error\");\n                    });\n            } else {\n                // console.log(\"we have a good token...\");\n                resolve(_this.uaaTokenCache);\n            }\n        });\n    }\n\n    fetchToken(_this) {\n        // TODO: check if we already have a token and the expiration time is good\n        return new Promise(function(resolve, reject) {\n            var aToken = _this.getUAAToken(_this);\n            aToken.then(function(response) {\n                resolve(_this);\n            });\n        });\n    }\n\n    MultiplePredixTimeSeriesQueries(pendingQueries) {\n        var deferred = this.q.defer();\n        var predixTSCalls = [];\n        // have to reference \"this\" inside angular foreach\n        var _this = this;\n        angular.forEach(pendingQueries, function(aQuery) {\n            predixTSCalls.push(_this.SinglePredixTimeSeriesQuery(aQuery));\n        });\n        this.q.all(predixTSCalls)\n            .then(\n                function(results) {\n                    var response = {\n                        data: []\n                    };\n                    angular.forEach(results, function(result) {\n                        response.data.push(result);\n                    });\n                    deferred.resolve(response);\n                },\n                function(errors) {\n                    deferred.reject(errors);\n                },\n                function(updates) {\n                    deferred.update(updates);\n                }\n            );\n        return deferred.promise;\n    }\n\n    // Called once per panel (graph)\n    query(options) {\n        // not needed since we are using suggest vs value?\n        // it isn't used anyways..\n        //var query = this.buildQueryParameters(options);\n\n        var queries = [];\n        if (options.targets.length <= 0) {\n            return this.q.when({\n                data: []\n            });\n        }\n        if (typeof options.targets[0].metric === 'undefined') {\n            return this.q.when({\n                data: []\n            });\n        }\n        // the rest of this function is a promise\n        var deferred = this.q.defer();\n\n        // Iterate over each target and build our query, store inside\n        angular.forEach(options.targets, function(target) {\n            // there's no \"next\" option in here, so test and skip\n            if ((!target.hide) && (typeof target.metric !== 'undefined')) {\n                // placeholder while query is built\n                var aQuery = {\n                    \"start\": \"15s-ago\",\n                    \"end\": \"1s-ago\",\n                    \"tags\": [{\n                        \"name\": [\"placeholder\"]\n                    }]\n                };\n                aQuery.tags[0].name[0] = target.metric;\n                aQuery.tags[0].limit = options.maxDataPoints;\n                aQuery.start = options.range.from.valueOf();\n                aQuery.end = options.range.to.valueOf();\n                // now the filters\n                if (typeof target.attributes !== undefined) {\n                    // there are filters defined, loop through them\n                    var attributes = {};\n                    angular.forEach(target.attributes, function(attribute) {\n                        var name = attribute.name;\n                        var value = attribute.value;\n                        // if the value is empty, skip it\n                        if (value.length > 0) {\n                            //var aHash = {};\n                            //aHash[name] = value;\n                            //attribute_list.push(aHash);\n                            attributes[name] = value;\n                        }\n                    });\n                    if (attributes !== null) {\n                        // only add filters if some are defined\n                        aQuery.tags[0].filters = {};\n                        aQuery.tags[0].filters.attributes = attributes;\n                    }\n                }\n                // Add the query and the target alias\n                // thhe alias will be used later for legend substitution if it is defined\n                queries.push({\n                    fullQuery: aQuery,\n                    targetAlias: target.alias\n                });\n            } else {\n                console.log(\"hidden or empty, not adding to query\");\n            }\n        });\n        // Iterate over each target and get the data from TimeSeries\n        var _this = this;\n        // Check if there are any metrics to query (they can all be hidden, or none at all)\n        if (queries.length === 0) {\n            // console.log(\"no tags visible or specified, no data to fetch\");\n            deferred.resolve({\n                data: []\n            });\n            return deferred.promise;\n        }\n        this.fetchToken(this).then(function(_this) {\n            var predixQueries = _this.q.all({\n                first: _this.MultiplePredixTimeSeriesQueries(queries),\n            });\n            predixQueries.then(function(results) {\n                // return results from predix query\n                deferred.resolve(results.first);\n            });\n        });\n        return deferred.promise;\n    }\n\n    testDatasource() {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/tags',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(response) {\n                console.log(response);\n                if (response.status === 200) {\n                    return {\n                        status: \"success\",\n                        message: \"Data source is working\",\n                        title: \"Success\"\n                    };\n                }\n            });\n        });\n    }\n}\n"]}