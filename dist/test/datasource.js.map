{"version":3,"sources":["../../src/datasource.js"],"names":["PredixTimeSeriesDatasource","instanceSettings","$q","backendSrv","$timeout","$http","templateSrv","type","url","name","q","http","uaaTokenCache","tsURL","jsonData","predixZoneId","uaacURL","clientData","uaacType","uaacGrantType","uaac_origin","expand","console","log","_this","fetchToken","then","datasourceRequest","data","method","headers","uaacToken","response","mapToTextValue","results","metricName","query","JSON","stringify","result","Object","keys","tags","attributes","attributeName","each","elem","push","mapToTextAndType","map","d","i","text","expandable","options","targets","filter","target","aQuery","deferred","defer","request","fullQuery","tag","tagName","targetAlias","length","a_metric","datapoints","values","timeseries","newseries","instance","resolve","error","promise","Promise","reject","now","Date","checkTime","getTime","uaacTokenType","expiresDTTM","clientID","split","clientSecret","payload","encodeURI","btoa","access_token","token_type","uaacExpires","expires_in","timeObject","aToken","getUAAToken","pendingQueries","predixTSCalls","forEach","SinglePredixTimeSeriesQuery","all","errors","updates","update","queries","when","metric","hide","limit","maxDataPoints","start","range","from","valueOf","end","to","undefined","attribute","value","filters","alias","predixQueries","first","MultiplePredixTimeSeriesQueries","status","message","title"],"mappings":"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","file":"datasource.js","sourcesContent":["import angular from \"angular\";\nimport _ from \"lodash\";\nimport dateMath from \"app/core/utils/datemath\";\nimport kbn from \"app/core/utils/kbn\";\n\nexport class PredixTimeSeriesDatasource {\n\n    constructor(instanceSettings, $q, backendSrv, $timeout, $http, templateSrv) {\n        this.type = instanceSettings.type;\n        this.url = instanceSettings.url;\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.http = $http;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        // the uaa token is stored here in the model\n        this.uaaTokenCache = [];\n        // these attributes are pulled from the datasource definition ui\n        this.tsURL = instanceSettings.jsonData.tsURL;\n        this.predixZoneId = instanceSettings.jsonData.predixZoneId;\n        this.uaacURL = instanceSettings.jsonData.uaacURL;\n        this.clientData = instanceSettings.jsonData.clientData;\n        this.uaacType = instanceSettings.jsonData.uaacType;\n        this.uaacGrantType = instanceSettings.jsonData.uaacGrantType;\n        this.uaac_origin = instanceSettings.jsonData.uaac_origin;\n        this.expand = true;\n        console.log(\"predix time series datasource constructor finished\");\n    }\n\n    // Required for hints\n    getMetrics() {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/tags',\n                data: '',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(response) {\n                return _this.mapToTextValue(response.data.results);\n            });\n        });\n    }\n\n    getAttributesForMetric(metricName) {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            var query = {\n                \"start\": \"1d-ago\",\n                \"end\": \"1s-ago\",\n                \"tags\": [{\n                    \"name\": [metricName]\n                }]\n            };\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/datapoints',\n                data: JSON.stringify(query),\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(result) {\n                return _this.mapToTextValue(Object.keys(result.data.tags[0].results[0].attributes));\n            });\n        });\n    }\n\n    getAttributeValues(metricName, attributeName) {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            var query = {\n                \"start\": \"1d-ago\",\n                \"end\": \"1s-ago\",\n                \"tags\": [{\n                    \"name\": [metricName]\n                }]\n            };\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/datapoints',\n                data: JSON.stringify(query),\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(result) {\n                return _this.mapToTextValue(result.data.tags[0].results[0].attributes[attributeName]);\n            });\n        });\n    }\n\n    getAggregations() {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/aggregations',\n                data: '',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(response) {\n                var data = [];\n                _.each(response.data.results, function(elem) {\n                    data.push({\n                        name: elem.type,\n                        type: elem.name\n                    });\n                });\n                return _this.mapToTextAndType(data);\n            });\n        });\n    }\n\n    mapToTextValue(results) {\n        return _.map(results, (d, i) => {\n            return {\n                text: d,\n                expandable: true\n            };\n        });\n    }\n\n    mapToTextAndType(result) {\n        return _.map(result, function(d, i) {\n            return {\n                text: d.name,\n                expandable: false,\n                type: d.type\n            };\n        });\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, function(target) {\n            return target.target !== 'select metric';\n        });\n        return options;\n    }\n\n    // Since we are limited on the amount of data that can be returned,\n    // each metric gets its own query for maximum results\n    SinglePredixTimeSeriesQuery(aQuery) {\n        var deferred = this.q.defer();\n        var request = this.backendSrv.datasourceRequest({\n            url: this.tsURL + '/v1/datapoints',\n            data: JSON.stringify(aQuery.fullQuery),\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + this.uaaTokenCache.uaacToken,\n                'Predix-Zone-Id': this.predixZoneId,\n                'Access-Control-Allow-Origin': this.uaac_origin\n            }\n        }).then(function(result) {\n            // we always get one tag back\n            var tag = result.data.tags[0];\n            var tagName = tag.name;\n            if ((typeof aQuery.targetAlias !== 'undefined') && (aQuery.targetAlias.length > 0)) {\n                tagName = aQuery.targetAlias;\n            }\n            // construct the response\n            var a_metric = {\n                target: tagName,\n                datapoints: []\n            };\n            // add in the datapoints, picking the correct fields\n            // predix has a \"quality\" field that is ignored\n            _.each(tag.results[0].values, function(timeseries) {\n                var newseries = [timeseries[1], timeseries[0]];\n\n                // Specific filter for our client - Corey Shrader with Bin Yang's PITC Analytics Team\n                if ((tag.name == \"rttMonLatestHTTPOperRTT\" || tag.name == \"rttMonLatestHTTPOperRTT.detectOutlier\") && tag.results[0].attributes.instance[0] == \"701\") {\n                    //console.log(\"Old: \" + newseries[0]);\n                    if (newseries[0] != 0 && newseries[0] != -1) {\n                        newseries[0] = 80000 / newseries[0];\n                    }\n                    //console.log(\"New: \" + newseries[0]);\n                }\n\n                a_metric.datapoints.push(newseries);\n            });\n            return a_metric;\n        })\n            .then(function(response) {\n                deferred.resolve(response);\n            }, function(error) {\n                console.error(error);\n            });\n        return deferred.promise;\n    }\n\n\n    getUAAToken(_this) {\n        return new Promise(function(resolve, reject) {\n            var now = new Date();\n            var checkTime = new Date(now.getTime() + 1000 * 30);\n            if (typeof _this.uaaTokenCache.uaacTokenType === 'undefined' ||\n                (typeof _this.uaaTokenCache.expiresDTTM !== 'undefined' &&\n                _this.uaaTokenCache.expiresDTTM < checkTime)) {\n                var clientID = _this.clientData.split(\":\")[0];\n                var clientSecret = _this.clientData.split(\":\")[1];\n                var payload = encodeURI(\"client_id=\" + clientID +\n                    \"&client_secret=\" + clientSecret +\n                    \"&response_type=token&grant_type=client_credentials\");\n                _this.backendSrv.datasourceRequest({\n                    method: 'POST',\n                    url: _this.uaacURL,\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'Authorization': 'Basic ' + btoa(_this.clientData),\n                    },\n                    data: payload\n                }).then(\n                    function(response) {\n                        _this.uaaTokenCache = [];\n                        _this.uaaTokenCache.uaacToken = response.data.access_token;\n                        _this.uaaTokenCache.uaacTokenType = response.data.token_type;\n                        _this.uaaTokenCache.uaacExpires = response.data.expires_in;\n                        var timeObject = new Date();\n                        //set the time and date that this token expires\n                        timeObject = new Date(timeObject.getTime() + 1000 * response.data.expires_in);\n                        _this.uaaTokenCache.expiresDTTM = timeObject;\n                        // console.log(\"Got a new token!\");\n                        // console.log($scope.datasource.uaaTokenCache);\n                        resolve(_this.uaaTokenCache);\n                    },\n                    function(error) {\n                        console.log(\"Failed to get a token: \" + error);\n                        resolve(\"error\");\n                    });\n            } else {\n                // console.log(\"we have a good token...\");\n                resolve(_this.uaaTokenCache);\n            }\n        });\n    }\n\n    fetchToken(_this) {\n        // TODO: check if we already have a token and the expiration time is good\n        return new Promise(function(resolve, reject) {\n            var aToken = _this.getUAAToken(_this);\n            aToken.then(function(response) {\n                resolve(_this);\n            });\n        });\n    }\n\n    MultiplePredixTimeSeriesQueries(pendingQueries) {\n        var deferred = this.q.defer();\n        var predixTSCalls = [];\n        // have to reference \"this\" inside angular foreach\n        var _this = this;\n        angular.forEach(pendingQueries, function(aQuery) {\n            predixTSCalls.push(_this.SinglePredixTimeSeriesQuery(aQuery));\n        });\n        this.q.all(predixTSCalls)\n            .then(\n                function(results) {\n                    var response = {\n                        data: []\n                    };\n                    angular.forEach(results, function(result) {\n                        response.data.push(result);\n                    });\n                    deferred.resolve(response);\n                },\n                function(errors) {\n                    deferred.reject(errors);\n                },\n                function(updates) {\n                    deferred.update(updates);\n                }\n            );\n        return deferred.promise;\n    }\n\n    // Called once per panel (graph)\n    query(options) {\n        // not needed since we are using suggest vs value?\n        // it isn't used anyways..\n        //var query = this.buildQueryParameters(options);\n\n        var queries = [];\n        if (options.targets.length <= 0) {\n            return this.q.when({\n                data: []\n            });\n        }\n        if (typeof options.targets[0].metric === 'undefined') {\n            return this.q.when({\n                data: []\n            });\n        }\n        // the rest of this function is a promise\n        var deferred = this.q.defer();\n\n        // Iterate over each target and build our query, store inside\n        angular.forEach(options.targets, function(target) {\n            // there's no \"next\" option in here, so test and skip\n            if ((!target.hide) && (typeof target.metric !== 'undefined')) {\n                // placeholder while query is built\n                var aQuery = {\n                    \"start\": \"15s-ago\",\n                    \"end\": \"1s-ago\",\n                    \"tags\": [{\n                        \"name\": [\"placeholder\"]\n                    }]\n                };\n                aQuery.tags[0].name[0] = target.metric;\n                aQuery.tags[0].limit = options.maxDataPoints;\n                aQuery.start = options.range.from.valueOf();\n                aQuery.end = options.range.to.valueOf();\n                // now the filters\n                if (typeof target.attributes !== undefined) {\n                    // there are filters defined, loop through them\n                    var attributes = {};\n                    angular.forEach(target.attributes, function(attribute) {\n                        var name = attribute.name;\n                        var value = attribute.value;\n                        // if the value is empty, skip it\n                        if (value.length > 0) {\n                            //var aHash = {};\n                            //aHash[name] = value;\n                            //attribute_list.push(aHash);\n                            attributes[name] = value;\n                        }\n                    });\n                    if (attributes !== null) {\n                        // only add filters if some are defined\n                        aQuery.tags[0].filters = {};\n                        aQuery.tags[0].filters.attributes = attributes;\n                    }\n                }\n                // Add the query and the target alias\n                // thhe alias will be used later for legend substitution if it is defined\n                queries.push({\n                    fullQuery: aQuery,\n                    targetAlias: target.alias\n                });\n            } else {\n                console.log(\"hidden or empty, not adding to query\");\n            }\n        });\n        // Iterate over each target and get the data from TimeSeries\n        var _this = this;\n        // Check if there are any metrics to query (they can all be hidden, or none at all)\n        if (queries.length === 0) {\n            // console.log(\"no tags visible or specified, no data to fetch\");\n            deferred.resolve({\n                data: []\n            });\n            return deferred.promise;\n        }\n        this.fetchToken(this).then(function(_this) {\n            var predixQueries = _this.q.all({\n                first: _this.MultiplePredixTimeSeriesQueries(queries),\n            });\n            predixQueries.then(function(results) {\n                // return results from predix query\n                deferred.resolve(results.first);\n            });\n        });\n        return deferred.promise;\n    }\n\n    testDatasource() {\n        var _this = this;\n        return this.fetchToken(_this).then(function(_this) {\n            return _this.backendSrv.datasourceRequest({\n                url: _this.tsURL + '/v1/tags',\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': _this.uaaTokenCache.uaacToken,\n                    'Predix-Zone-Id': _this.predixZoneId,\n                    'Access-Control-Allow-Origin': _this.uaac_origin\n                }\n            }).then(function(response) {\n                console.log(response);\n                if (response.status === 200) {\n                    return {\n                        status: \"success\",\n                        message: \"Data source is working\",\n                        title: \"Success\"\n                    };\n                }\n            });\n        });\n    }\n}\n"]}